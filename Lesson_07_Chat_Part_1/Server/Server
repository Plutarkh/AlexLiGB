package Server;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Vector;

public class Server implements ServerConst {

    //Создаем коллекция для хранения клиентов
    //Vector -  полностью синхронизированный ArrayList

    private Vector<ClientHandler> clients;

    //Создаем конструктор сервера

    public Server(){



        ServerSocket server = null;
        Socket socket = null;
        clients = new Vector<>();


        // Создаем цикл для постоянного доступа сервера для новых клиентов
        //Оборачиваем все в трайкетч

        try {
            server = new ServerSocket(PORT);
            System.out.println("Сервер запущен, ожидаем подключения клиентов");

            while (true){
                socket = server.accept();
                clients.add(new ClientHandler(this,socket));
                System.out.println("Клиент подключен");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {

        }
    }

    //Создаем метод для отправки сообщений всем
    public void broadcast(String msg){

        //Проходимся по всем клиентам из списка и отправляем им сообщения

        for (int i = 0; i <clients.size() ; i++) {
        clients.get(i).sendMessage(msg);
        }

    }
}
